pipeline {
    agent any
    tools {
        jdk 'jdk11'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'Jenkins', credentialsId: 'a5eb0873-011b-488f-9bc9-85a85168b1c0', url: 'https://github.com/ritvikraj-cse/Projects.git'
            }
        }
        
        stage('Compile') {
            steps {
                dir('Ekartpipeline_s') {
                    sh "mvn clean compile -DskipTests=true"
                }
            }
        }
        
        stage('OWASP Scan') {
            steps {
                dir('Ekartpipeline_s') {
                    dependencyCheck additionalArguments: '--scan ./ ', odcInstallation: 'DP'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        
        stage('SonarQube') {
            steps {
                dir('Ekartpipeline_s') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Shopping-Cart \
                        -Dsonar.java.binaries=. \
                        -Dsonar.projectKey=Shopping-Cart '''
                    }
                }
            }
        }
        
        stage('Build') {
            steps {
                dir('Ekartpipeline_s') {
                    sh "mvn clean package -DskipTests=true"
                }
            }
        }
        
        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: '2fe19d8a-3d12-4b82-ba20-9d22e6bf1672', toolName: 'docker') {
                        sh "docker build -t shopping-cart -f docker/Dockerfile ."
                        sh "docker tag shopping-cart ritvikrj99/shopping-cart:latest"
                        sh "docker push ritvikrj99/shopping-cart:latest"
                    }
                }
            }
        }
    }
}
